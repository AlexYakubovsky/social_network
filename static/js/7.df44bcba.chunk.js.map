{"version":3,"sources":["components/common/formControls/formControls.js","components/common/formControls/formControls.module.css","helpers/validations/validations.js","components/Login/LoginForm.module.css","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["Textarea","input","meta","error","touched","props","hasError","className","styles","error_input","type","error_message","module","exports","required","value","undefined","maxLengthCreator","maxLength","length","reduxForm","form","onSubmitSuccess","result","dispatch","reset","handleSubmit","captcha","onSubmit","Field","name","component","validate","placeholder","src","alt","loginForm__someError","Login","loginUser","isAuth","to","formData","email","password","rememberMe","connect","state","getIsAuth","getCaptcha"],"mappings":"mMAGaA,EAAW,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCAC7DC,EAAWH,GAASC,EAE1B,OACI,6BACI,yBAAKG,UAAWD,GAAYE,IAAOC,aACf,aAAfJ,EAAMK,KAAsB,8CAAcT,EAAWI,IAAW,2CAAWJ,EAAWI,KAG1FC,GAAY,0BAAMC,UAAWC,IAAOG,eAAgBR,M,oBCXjES,EAAOC,QAAU,CAAC,YAAc,kCAAkC,cAAgB,sC,iCCDlF,oEAAO,IAAMC,EAAW,SAAAC,GAAK,OAAKA,OAA8BC,EAAtB,qBAE7BC,EAAmB,SAAAC,GAAS,OAAI,SAAAH,GAAK,OAAIA,EAAMI,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkEF,K,oBCDxHJ,EAAOC,QAAU,CAAC,qBAAuB,0C,kICyC1BO,cAAU,CAACC,KAAM,QAASC,gBApCrB,SAACC,EAAQC,GAAT,OAAsBA,EAASC,YAAM,YAoC1CL,EAlCG,SAAC,GAAoC,IAAnCM,EAAkC,EAAlCA,aAAcvB,EAAoB,EAApBA,MAAOwB,EAAa,EAAbA,QACrC,OACI,0BAAMC,SAAUF,GACZ,kBAACG,EAAA,EAAD,CAAOC,KAAK,QACLC,UAAW/B,IACXU,KAAK,QACLsB,SAAU,CAAClB,KACXmB,YAAY,UAEnB,kBAACJ,EAAA,EAAD,CAAOC,KAAK,WACLC,UAAW/B,IACXU,KAAK,WACLsB,SAAU,CAAClB,KACXmB,YAAY,aAEnB,kBAACJ,EAAA,EAAD,CAAOC,KAAK,aACLC,UAAU,QACVrB,KAAK,aAfhB,cAkBKiB,GAAW,yBAAKO,IAAKP,EAASQ,IAAI,KAClCR,GACD,kBAACE,EAAA,EAAD,CAAOC,KAAK,UACLC,UAAW/B,IACXU,KAAK,QACLsB,SAAU,CAAClB,KACXmB,YAAY,YAClB9B,GAAS,uBAAGI,UAAWC,IAAO4B,sBAAuBjC,GAEtD,4BAAQO,KAAK,UAAb,Y,OCtBG2B,EAXD,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,OAAQZ,EAAa,EAAbA,QAG/B,OAAOY,EAAS,kBAAC,IAAD,CAAUC,GAAI,aAC1B,6BACI,qCAEA,kBAAC,EAAD,CAAWZ,SANF,SAAAa,GAAQ,OAAIH,EAAUG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASd,UAMjEA,QAASA,M,gBCGrCkB,uBAFS,SAAAC,GAAK,MAAK,CAACP,OAAQQ,YAAUD,GAAQnB,QAASqB,YAAWF,MAEzC,CAACR,eAA1BO,EARQ,SAAAxC,GACnB,OACI,kBAAC,EAAUA","file":"static/js/7.df44bcba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./formControls.module.css\";\r\n\r\nexport const Textarea = ({input, meta: {error, touched}, ...props}) => {\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n        <div>\r\n            <div className={hasError && styles.error_input}>\r\n                {props.type === 'textarea' ? <textarea {...input} {...props}/> : <input {...input} {...props}/>}\r\n            </div>\r\n\r\n            {hasError && <span className={styles.error_message}>{error}</span>}\r\n        </div>\r\n    )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"formControls_error_input__Ga1mW\",\"error_message\":\"formControls_error_message__1Kcfm\"};","export const required = value => !value ? 'Field is required' : undefined;\r\n\r\nexport const maxLengthCreator = maxLength => value => value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm__someError\":\"LoginForm_loginForm__someError__3Mzk-\"};","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Textarea} from \"../common/formControls/formControls\";\r\nimport {required} from \"../../helpers/validations/validations\";\r\nimport styles from \"./LoginForm.module.css\"\r\n\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('login'));\r\n\r\nconst LoginForm = ({handleSubmit, error, captcha}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='email'\r\n                   component={Textarea}\r\n                   type='input'\r\n                   validate={[required]}\r\n                   placeholder='Email'/>\r\n\r\n            <Field name=\"password\"\r\n                   component={Textarea}\r\n                   type='password'\r\n                   validate={[required]}\r\n                   placeholder='Password'/>\r\n\r\n            <Field name='rememberMe'\r\n                   component='input'\r\n                   type='checkbox'/>\r\n                   Remember me\r\n\r\n            {captcha && <img src={captcha} alt=''/>}\r\n            {captcha &&\r\n            <Field name=\"captcha\"\r\n                   component={Textarea}\r\n                   type='input'\r\n                   validate={[required]}\r\n                   placeholder='Captcha'/>}\r\n            {error && <p className={styles.loginForm__someError}>{error}</p>}\r\n\r\n            <button type='submit'>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'login', onSubmitSuccess: afterSubmit})(LoginForm)","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = ({loginUser, isAuth, captcha}) => {\r\n    const onSubmit = formData => loginUser(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n\r\n    return isAuth ? <Redirect to={'/profile'}/> :\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <LoginForm onSubmit={onSubmit} captcha={captcha}/>\r\n        </div>\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {loginUser} from \"../../redux/authReducer\";\r\nimport {getCaptcha, getIsAuth} from \"../../reselects/authReselect\";\r\n\r\nconst LoginContainer = props => {\r\n    return (\r\n        <Login {...props}/>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({isAuth: getIsAuth(state), captcha: getCaptcha(state)});\r\n\r\nexport default connect(mapStateToProps, {loginUser})(LoginContainer);"],"sourceRoot":""}