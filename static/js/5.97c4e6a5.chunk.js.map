{"version":3,"sources":["components/common/formControls/formControls.js","components/common/formControls/formControls.module.css","helpers/validations/validations.js","components/hoc/withAuthRedirect.jsx","components/Messages/Messages.module.css","components/Messages/User/User.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/User/User.jsx","components/Messages/Dialog/Dialog.jsx","components/Messages/MessageForm/MessageForm.jsx","components/Messages/Messages.jsx","reselects/messagesReselect.js","components/Messages/MessagesContainer.jsx"],"names":["Textarea","input","meta","error","touched","props","hasError","className","styles","error_input","type","error_message","module","exports","required","value","undefined","maxLengthCreator","maxLength","length","mapStateToProps","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","User","path","id","user","activeClassName","active","name","Dialog","dialog","message","maxLength50","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","messages__new_message","Field","component","validate","placeholder","Messages","userComponent","userData","map","v","dialogComponent","dialogData","messages","user_container","dialog_container","formData","addMessage","getUserData","messagesPage","getDialogData","compose"],"mappings":"mMAGaA,EAAW,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAaC,EAAW,gCAC7DC,EAAWH,GAASC,EAE1B,OACI,6BACI,yBAAKG,UAAWD,GAAYE,IAAOC,aACf,aAAfJ,EAAMK,KAAsB,8CAAcT,EAAWI,IAAW,2CAAWJ,EAAWI,KAG1FC,GAAY,0BAAMC,UAAWC,IAAOG,eAAgBR,M,oBCXjES,EAAOC,QAAU,CAAC,YAAc,kCAAkC,cAAgB,sC,iCCDlF,oEAAO,IAAMC,EAAW,SAAAC,GAAK,OAAKA,OAA8BC,EAAtB,qBAE7BC,EAAmB,SAAAC,GAAS,OAAI,SAAAH,GAAK,OAAIA,EAAMI,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkEF,K,4GCGlHI,EAAkB,SAAAC,GAAK,MAAK,CAACC,OAAQC,YAAUF,KAYtCG,IAVU,SAAAC,GAAc,IAC7BC,EAD4B,uKAG1B,OAAQC,KAAKtB,MAAMiB,OAAqC,kBAACG,EAAcE,KAAKtB,OAAhD,kBAAC,IAAD,CAAUuB,GAAI,eAHhB,GACFC,IAAMJ,WAMtC,OAAOK,YAAQV,EAARU,CAAyBJ,K,oBCbpCd,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,iBAAmB,mCAAmC,sBAAwB,0C,oBCAxLD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,oBCArDD,EAAOC,QAAU,CAAC,OAAS,yB,wGCaZkB,EAVF,SAAA1B,GACT,IAAI2B,EAAI,oBAAgB3B,EAAM4B,IAE9B,OACI,yBAAK1B,UAAWC,IAAO0B,MACnB,kBAAC,IAAD,CAASN,GAAII,EAAMG,gBAAiB3B,IAAO4B,QAAS/B,EAAMgC,Q,kBCEvDC,EARA,SAAAjC,GACX,OACI,yBAAKE,UAAWC,IAAO+B,QAClBlC,EAAMmC,U,4CCAbC,EAAcxB,YAAiB,IAgBtByB,cAAU,CAACC,KAAM,UAAWC,gBAfvB,SAACC,EAAQC,GAAT,OAAsBA,EAASC,YAAM,cAe1CL,EAbK,SAAArC,GAChB,OACI,0BAAM2C,SAAU3C,EAAM4C,aAAc1C,UAAWC,IAAO0C,uBAClD,kBAACC,EAAA,EAAD,CAAOd,KAAK,UACLe,UAAWpD,IACXqD,SAAU,CAACvC,IAAU2B,GACrB/B,KAAK,OACL4C,YAAY,eACnB,4BAAQ5C,KAAK,UAAb,oBCQG6C,EAnBE,SAAAlD,GACb,IAAImD,EAAgBnD,EAAMoD,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAM1B,GAAI0B,EAAE1B,GAAII,KAAMsB,EAAEtB,UAChEuB,EAAkBvD,EAAMwD,WAAWH,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQ1B,GAAI0B,EAAE1B,GAAIO,QAASmB,EAAEnB,aAI7E,OACI,yBAAKjC,UAAWC,IAAOsD,UACnB,yBAAKvD,UAAWC,IAAOuD,gBAAiBP,GAExC,yBAAKjD,UAAWC,IAAOwD,kBACnB,6BAAMJ,GAEN,kBAAC,EAAD,CAAaZ,SATR,SAAAiB,GAAQ,OAAI5D,EAAM6D,WAAWD,EAASzB,e,iCCV9C2B,EAAc,SAAA9C,GAAK,OAAIA,EAAM+C,aAAaX,UAC1CY,EAAgB,SAAAhD,GAAK,OAAIA,EAAM+C,aAAaP,YCW1CS,sBACX9C,IACAM,aAPoB,SAAAT,GAAK,MAAK,CAC9BoC,SAAUU,EAAY9C,GACtBwC,WAAYQ,EAAchD,MAKD,CAAC6C,iBAFfI,CAGbf","file":"static/js/5.97c4e6a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./formControls.module.css\";\r\n\r\nexport const Textarea = ({input, meta: {error, touched}, ...props}) => {\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n        <div>\r\n            <div className={hasError && styles.error_input}>\r\n                {props.type === 'textarea' ? <textarea {...input} {...props}/> : <input {...input} {...props}/>}\r\n            </div>\r\n\r\n            {hasError && <span className={styles.error_message}>{error}</span>}\r\n        </div>\r\n    )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"formControls_error_input__Ga1mW\",\"error_message\":\"formControls_error_message__1Kcfm\"};","export const required = value => !value ? 'Field is required' : undefined;\r\n\r\nexport const maxLengthCreator = maxLength => value => value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../../reselects/authReselect\";\r\n\r\nconst mapStateToProps = state => ({isAuth: getIsAuth(state)});\r\n\r\nconst withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            return !this.props.isAuth ? <Redirect to={'/login'}/> : <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n};\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2XDGA\",\"user_container\":\"Messages_user_container__3ZM-6\",\"dialog_container\":\"Messages_dialog_container__2u_66\",\"messages__new_message\":\"Messages_messages__new_message__E5WIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__-t4Pr\",\"active\":\"User_active__2iNSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1lcCR\"};","import React from \"react\";\r\nimport styles from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = props => {\r\n    let path = `/messages/${props.id}`;\r\n\r\n    return (\r\n        <div className={styles.user} >\r\n            <NavLink to={path} activeClassName={styles.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./Dialog.module.css\";\r\n\r\nconst Dialog = props => {\r\n    return (\r\n        <div className={styles.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport styles from \"../Messages.module.css\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Textarea} from \"../../common/formControls/formControls\";\r\nimport {maxLengthCreator, required} from \"../../../helpers/validations/validations\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('message'));\r\n\r\nconst MessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.messages__new_message}>\r\n            <Field name='message'\r\n                   component={Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   type='text'\r\n                   placeholder='Message...'/>\r\n            <button type='submit'>Send message</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'message', onSubmitSuccess: afterSubmit})(MessageForm);","import React from \"react\";\r\nimport styles from \"./Messages.module.css\";\r\nimport User from \"./User/User\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport MessageForm from \"./MessageForm/MessageForm\";\r\n\r\nconst Messages = props => {\r\n    let userComponent = props.userData.map(v => <User id={v.id} name={v.name}/>),\r\n        dialogComponent = props.dialogData.map(v => <Dialog id={v.id} message={v.message}/>);\r\n\r\n    const onSubmit = formData => props.addMessage(formData.message);\r\n\r\n    return (\r\n        <div className={styles.messages}>\r\n            <div className={styles.user_container}>{userComponent}</div>\r\n\r\n            <div className={styles.dialog_container}>\r\n                <div>{dialogComponent}</div>\r\n\r\n                <MessageForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","export const getUserData = state => state.messagesPage.userData;\r\nexport const getDialogData = state => state.messagesPage.dialogData;","import Messages from \"./Messages\";\r\nimport {addMessage} from \"../../redux/messagesReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getUserData, getDialogData} from \"../../reselects/messagesReselect\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: getUserData(state),\r\n    dialogData: getDialogData(state)\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addMessage})\r\n)(Messages)"],"sourceRoot":""}