{"version":3,"sources":["components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Nav/Nav.jsx","components/Footer/Footer.jsx","reselects/appReselect.js","components/common/showError/ShowError.jsx","App.js","serviceWorker.js","redux/store.js","index.js","redux/authReducer.js","components/Nav/Nav.module.css","reselects/authReselect.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","redux/profileReducer.js","redux/appReducer.js","redux/messagesReducer.js","redux/friendsReducer.js","api/api.js","assets/images/logo.jpg","components/Footer/Footer.module.css","assets/images/preloader.gif","components/common/showError/ShowError.module.css"],"names":["Header","isAuth","login","logoutUser","className","styles","header","header_container","alt","src","logo","onClick","to","HeaderContainer","this","props","React","Component","compose","connect","state","getIsAuth","getLogin","Nav","nav","activeClassName","active","Footer","footer","getIsInitiated","app","isInitiated","getAppErrors","appErrors","getIsShowError","isShowError","ShowError","closeError","errorDescription","map","v","errorName","errorMessage","showError","LoginContainer","lazy","ProfileContainer","MessagesContainer","FriendsContainer","App","initiatedApp","cn","fallback","Preloader","exact","path","component","Boolean","window","location","hostname","match","reducers","combineReducers","appReducer","auth","authReducer","profilePage","profileReducer","messagesPage","messagesReducer","friendsPage","friendsReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","initialState","id","email","captcha","setAuthUserData","type","payload","getAuthUserData","dispatch","a","authAPI","authMe","data","resultCode","loginUser","password","rememberMe","getCaptchaUrl","stopSubmit","_error","messages","logout","url","action","module","exports","getUserId","getCaptcha","preloader","ADD_POST","DELETE_POST","postData","post","like","userProfile","userStatus","addPost","setUserStatus","setProfile","profileAPI","getProfile","setStatus","getStatus","updateStatus","status","savePhoto","photo","photos","saveProfile","profile","getState","userId","newPost","filter","postId","promise","Promise","all","length","name","ADD_MESSAGE","dialogData","userData","addMessage","newMessage","SET_USERS","FOLLOW_USER","users","totalCount","currentPage","usersOnPage","isFetching","disableButton","portionSize","followUser","unfollowUser","setCurrentPage","toggleIsFetching","toggleDisableButton","requestUsers","friendsAPI","getUsers","items","followUnfollowFlow","apiMethod","actionCreator","follow","unfollow","followed","instance","axios","baseURL","withCredentials","headers","get","response","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.4f82ae67.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../../assets/images/logo.jpg\";\nimport styles from \"./Header.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = ({isAuth, login, logoutUser}) => {\n    return (\n        <header className={styles.header}>\n            <div className={styles.header_container}>\n                <img alt='logo' src={logo}/>\n                {!isAuth ? <NavLink to='/login'>Login</NavLink> :\n                    <div>\n                        {login}\n                        <button onClick={logoutUser}>Logout</button>\n                    </div>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../../redux/authReducer\";\nimport {compose} from \"redux\";\nimport {getIsAuth, getLogin} from \"../../reselects/authReselect\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuth: getIsAuth(state),\n    login: getLogin(state)\n});\n\nexport default compose(\n    connect(mapStateToProps, {logoutUser})\n)(HeaderContainer);","import React from \"react\";\nimport styles from \"./Nav.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Nav = () => {\n    return (\n        <nav className={styles.nav}>\n            <ul>\n                <li>\n                    <NavLink to='/profile' activeClassName={styles.active}>profile</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/messages' activeClassName={styles.active}>messages</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/friends' activeClassName={styles.active}>friends</NavLink>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Nav;","import React from \"react\";\nimport styles from \"./Footer.module.css\"\n\nconst Footer = () => {\n    return (\n        <footer className={styles.footer}>2020</footer>\n    );\n};\n\nexport default Footer;","export const getIsInitiated = state => state.app.isInitiated;\r\nexport const getAppErrors = state => state.app.appErrors;\r\nexport const getIsShowError = state => state.app.isShowError;\r\n","import React from \"react\";\r\nimport styles from './ShowError.module.css';\r\n\r\nconst ShowError = ({closeError, appErrors}) => {\r\n    const errorDescription = appErrors.map(v => {\r\n        return (\r\n            <div>\r\n                <h1>{v.errorName}</h1>\r\n                <p>{v.errorMessage}</p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={styles.showError}>\r\n            {errorDescription}\r\n            <div>\r\n                <span onClick={closeError}>X</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ShowError;","import React, {lazy, Suspense} from \"react\";\nimport \"./App.css\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Nav from \"./components/Nav/Nav\";\nimport Footer from \"./components/Footer/Footer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {closeError, initiatedApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {getAppErrors, getIsInitiated, getIsShowError} from \"./reselects/appReselect\";\nimport ShowError from \"./components/common/showError/ShowError\";\nimport cn from \"classnames\";\n\nconst LoginContainer = lazy(() => import('./components/Login/LoginContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst MessagesContainer = lazy(() => import('./components/Messages/MessagesContainer'));\nconst FriendsContainer = lazy(() => import('./components/Friends/FriendsContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initiatedApp()\n    }\n\n    render() {\n        return !this.props.isInitiated ? <Preloader/> :\n            <div className={cn('app', 'showError')}>\n                <HeaderContainer/>\n                <Nav/>\n                <main className='main'>\n                    <Suspense fallback={<Preloader/>}>\n                        <Switch>\n                            <Route exact path='/' component={() => <Redirect to={'/profile'}/>}/>\n                            <Route path='/login' component={LoginContainer}/>\n                            <Route path='/profile/:userId?' component={ProfileContainer}/>\n                            <Route path='/messages' component={MessagesContainer}/>\n                            <Route path='/friends' component={FriendsContainer}/>\n                            <Route path='*' component={() => <div>404 not found</div>}/>\n                        </Switch>\n                    </Suspense>\n                </main>\n                <Footer/>\n                {this.props.isShowError && <ShowError closeError={this.props.closeError} appErrors={this.props.appErrors}/>}\n            </div>\n    }\n}\n\nconst mapStateToProps = state => ({\n    isInitiated: getIsInitiated(state),\n    appErrors: getAppErrors(state),\n    isShowError: getIsShowError(state)\n});\n\nexport default compose(\n    connect(mapStateToProps, {initiatedApp, closeError})\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    friendsPage: friendsReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {showError} from \"./appReducer\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captcha: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {...state, ...action.payload};\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {...state, captcha: action.url};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth, captcha) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {id, email, login, isAuth, captcha}\r\n});\r\nexport const getCaptchaUrlSuccess = url => ({type: GET_CAPTCHA_URL_SUCCESS, url});\r\n\r\n\r\nexport const getAuthUserData = () => async dispatch => {\r\n    try {\r\n        const data = await authAPI.authMe();\r\n\r\n        if (data.resultCode === 0) {\r\n            const {id, email, login} = data.data;\r\n\r\n            dispatch(setAuthUserData(id, email, login, true, null));\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const loginUser = (email, password, rememberMe, captcha) => dispatch => {\r\n    try {\r\n        authAPI.login(email, password, rememberMe, captcha).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                if (data.resultCode === 10) {\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n\r\n                dispatch(stopSubmit('login', {_error: data.messages[0]}));\r\n            }\r\n        });\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => async dispatch => {\r\n    try {\r\n        const data = await authAPI.logout();\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async dispatch => {\r\n    try {\r\n        const data = await authAPI.getCaptchaUrl();\r\n\r\n        dispatch(getCaptchaUrlSuccess(data.url));\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3DVVf\",\"active\":\"Nav_active__2Uc0A\"};","export const getIsAuth = state => state.auth.isAuth;\r\nexport const getLogin = state => state.auth.login;\r\nexport const getUserId = state => state.auth.id;\r\nexport const getCaptcha = state => state.auth.captcha;","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=''/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tJ2F\",\"header_container\":\"Header_header_container__STb8x\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {showError} from \"./appReducer\";\r\n\r\nconst ADD_POST = 'profilePage/ADD_POST';\r\nconst SET_USER_PROFILE = 'profilePage/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profilePage/SET_USER_STATUS';\r\nconst DELETE_POST = 'profilePage/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'profilePage/SAVE_PHOTO_SUCCESS';\r\n\r\nconst initialState = {\r\n    postData: [\r\n        {id: 1, post: 'Hi', like: 1},\r\n        {id: 2, post: 'It is my second post', like: 7},\r\n        {id: 3, post: 'How are you?', like: 3},\r\n        {id: 4, post: 'What do you think about my last post?:)', like: 5}\r\n    ],\r\n    userProfile: null,\r\n    userStatus: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 5,\r\n                post: action.post,\r\n                like: 0\r\n            };\r\n\r\n            return {...state, postData: [...state.postData, newPost]};\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, userProfile: {...action.userProfile}};\r\n\r\n        case SET_USER_STATUS:\r\n            return {...state, userStatus: action.userStatus};\r\n\r\n        case DELETE_POST:\r\n            return {...state, postData: state.postData.filter(v => v.id !== action.postId)};\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, userProfile: {...state.userProfile, photos: action.photos}};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = post => ({type: ADD_POST, post});\r\nexport const setUserProfile = userProfile => ({type: SET_USER_PROFILE, userProfile});\r\nexport const setUserStatus = userStatus => ({type: SET_USER_STATUS, userStatus});\r\nexport const deletePost = postId => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = photos => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const setProfile = id => async dispatch => {\r\n    try {\r\n        const data = await profileAPI.getProfile(id);\r\n\r\n        dispatch(setUserProfile(data));\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const setStatus = id => async dispatch => {\r\n    try {\r\n        const data = await profileAPI.getStatus(id);\r\n\r\n        dispatch(setUserStatus(data));\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const updateStatus = status => async dispatch => {\r\n    try {\r\n        const data = await profileAPI.updateStatus(status);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const savePhoto = photo => async dispatch => {\r\n    try {\r\n        const data = await profileAPI.savePhoto(photo);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(data.data.photos));\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const saveProfile = profile => async (dispatch, getState) => {\r\n    try {\r\n        const userId = getState().auth.id;\r\n        const data = await profileAPI.saveProfile(profile);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit('userInfoEdit', {_error: data.messages}));\r\n            // return Promise.reject(data.messages)\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIATED_SUCCESSFULLY = 'app/INITIATED_SUCCESSFULLY';\r\nconst SHOW_ERROR = 'app/SHOW_ERROR';\r\nconst CLOSE_ERROR = 'app/CLOSE_ERROR';\r\n\r\nconst initialState = {\r\n    isInitiated: false,\r\n    isShowError: false,\r\n    appErrors: []\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIATED_SUCCESSFULLY:\r\n            return {...state, isInitiated: true};\r\n\r\n        case SHOW_ERROR:\r\n            const error = {id: state.appErrors.length, errorName: action.error.name, errorMessage: action.error.message};\r\n\r\n            return {...state, isShowError: true, appErrors: [...state.appErrors, error]};\r\n\r\n        case CLOSE_ERROR:\r\n            return {...state, isShowError: false};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initiatedSuccessfully = () => ({type: INITIATED_SUCCESSFULLY});\r\nexport const showError = error => ({type: SHOW_ERROR, error});\r\nexport const closeError = () => ({type: CLOSE_ERROR});\r\n\r\nexport const initiatedApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise]).then(() => dispatch(initiatedSuccessfully()))\r\n};\r\n\r\nexport default appReducer;","const ADD_MESSAGE = 'messagePage/ADD_MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogData: [\r\n        {id: 0, message: 'hello'},\r\n        {id: 1, message: 'how are you?'},\r\n        {id: 2, message: 'what do think about this?'},\r\n        {id: 3, message: 'are you sure?'},\r\n    ],\r\n    userData: [\r\n        {id: 0, name: 'Alex'},\r\n        {id: 1, name: 'Kirill'},\r\n        {id: 2, name: 'Evgeny'},\r\n        {id: 3, name: 'Olga'},\r\n    ]\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage = {\r\n                id: state.dialogData.length,\r\n                message: action.message\r\n            };\r\n\r\n            return {...state, dialogData: [...state.dialogData, newMessage]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessage = message => ({type: ADD_MESSAGE, message});\r\n\r\nexport default messagesReducer;","import {friendsAPI} from \"../api/api\";\r\nimport {showError} from \"./appReducer\";\r\n\r\nconst SET_USERS = 'friendsPage/SET_USERS';\r\nconst FOLLOW_USER = 'friendsPage/FOLLOW_USER';\r\nconst UNFOLLOW_USER = 'friendsPage/UNFOLLOW_USER';\r\nconst SET_TOTAL_COUNT = 'friendsPage/SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE = 'friendsPage/SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'friendsPage/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_DISABLE_BUTTON = 'friendsPage/TOGGLE_IS_DISABLE_BUTTON';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    totalCount: null,\r\n    currentPage: 1,\r\n    usersOnPage: 50,\r\n    isFetching: false,\r\n    disableButton: [],\r\n    portionSize: 10\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case FOLLOW_USER:\r\n            return {...state, users: state.users.map(v => v.id === action.userId ? {...v, followed: true} : v)};\r\n\r\n        case UNFOLLOW_USER:\r\n            return {...state, users: state.users.map(v => v.id === action.userId ? {...v, followed: false} : v)};\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalCount: action.totalCount};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IS_DISABLE_BUTTON:\r\n            return {\r\n                ...state,\r\n                disableButton: action.disableButton ?\r\n                    [...state.disableButton, action.userId] :\r\n                    state.disableButton.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUsers = users => ({type: SET_USERS, users});\r\nexport const followUser = userId => ({type: FOLLOW_USER, userId});\r\nexport const unfollowUser = userId => ({type: UNFOLLOW_USER, userId});\r\nexport const setTotalCount = totalCount => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const setCurrentPage = currentPage => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleDisableButton = (disableButton, userId) => ({type: TOGGLE_IS_DISABLE_BUTTON, disableButton, userId});\r\n\r\nexport const requestUsers = (usersOnPage, currentPage) => async dispatch => {\r\n    try {\r\n        dispatch(toggleIsFetching(true));\r\n        const data = await friendsAPI.getUsers(usersOnPage, currentPage);\r\n\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalCount(data.totalCount));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(false));\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    try {\r\n        dispatch(toggleDisableButton(true, id));\r\n        const data = await apiMethod(id);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(id));\r\n            dispatch(toggleDisableButton(false, id))\r\n        }\r\n    } catch (error) {\r\n        dispatch(showError(error))\r\n    }\r\n};\r\n\r\nexport const follow = id => dispatch => followUnfollowFlow(dispatch, id, friendsAPI.follow, followUser);\r\n\r\nexport const unfollow = id => dispatch => followUnfollowFlow(dispatch, id, friendsAPI.unfollow, unfollowUser);\r\n\r\nexport default friendsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"328259c5-68c4-4f02-9ce4-53684a25ddd6\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n\r\n    login(email, password, rememberMe, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha}).then(response => response.data)\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => response.data)\r\n    },\r\n\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`).then(response => response.data)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`).then(response => response.data)\r\n    },\r\n\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`).then(response => response.data)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(response => response.data)\r\n    },\r\n\r\n    savePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile).then(response => response.data)\r\n    }\r\n};\r\n\r\nexport const friendsAPI = {\r\n    getUsers(usersOnPage, currentPage) {\r\n        return instance.get(`users?count=${usersOnPage}&page=${currentPage}`).then(response => response.data)\r\n    },\r\n\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data)\r\n    }\r\n};","module.exports = __webpack_public_path__ + \"static/media/logo.92e8cb5c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2SSh9\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.5861c44d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showError\":\"ShowError_showError__3fvBu\"};"],"sourceRoot":""}